
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool isSameTree(TreeNode* p, TreeNode* q) {
        if(!p && !q) return true;
        if(!p || !q) return false;
        if(p->val != q->val) return false;
        return  isSameTree(p->left, q->left) && isSameTree(p->right, q->right);
    }
};

class Solution1 {
public:
    bool isSameTree(TreeNode* p, TreeNode* q) {
        stack<TreeNode*> st;
        st.push(p);
        st.push(q);
        while(!st.empty()) {
            TreeNode *t1 = st.top();
            st.pop();
            TreeNode *t2 = st.top();
            st.pop();
            if(!t1 && !t2) continue;
            if(!t1 || !t2) return false;
            if(t1->val != t2->val) return false;
            st.push(t1->left);
            st.push(t2->left);
            st.push(t1->right);
            st.push(t2->right);
        }
        return true;
    }
};
