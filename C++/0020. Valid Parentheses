class Solution {
public:
    bool isValid(string s) {
        stack<char> stack;
        for(int i = 0; i < s.size(); ++i) {
            if(s[i] == '(' || s[i] == '[' || s[i] == '{') {
                stack.push(s[i]);
            } else {
                if(stack.empty()) return false;
                if(s[i] == ')' && stack.top() != '(') return false;
                if(s[i] == ']' && stack.top() != '[') return false;
                if(s[i] == '}' && stack.top() != '{') return false;
                stack.pop();
            }
        }
        return stack.empty();
    }

};

class Solution1 {
public:
    bool isValid(string s) {
        stack<char> st;
        for(auto ch:s){
            switch(ch){
                case '(':case '[':case'{':st.push(ch);break;
                case ')':
                        if(st.empty()) return false;
                        else{
                            char t = st.top();
                            st.pop();
                            if(t!='(') return false;
                        }
                        break;
                case ']':
                        if(st.empty()) return false;
                        else{
                            char t = st.top();
                            st.pop();
                            if(t!='[') return false;
                        }
                        break;
                case '}':
                        if(st.empty()) return false;
                        else{
                            char t = st.top();
                            st.pop();
                            if(t!='{') return false;
                        }
                        break;
            }
        }
        return st.empty();
    }
};
